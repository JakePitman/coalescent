/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/spaceship-model-glass.glb 
*/

import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";

const renderOrders = [
  "glass",
  "ship-base",
  "ship-gray",
  "ship-orange",
  "console-base-back",
  "console-gray-back",
  "console-base",
  "console-gray",
  "console-black",
];

export function Model(props) {
  const { nodes, materials } = useGLTF("/spaceship-model.glb");
  useEffect(() => {
    Object.keys(materials).forEach((key) => {
      materials[key].depthTest = false;
      materials[key].depthWrite = false;
      materials[key].needsUpdate = true;
    });
  }, [materials]);

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Cube020_8.geometry}
        renderOrder={renderOrders["glass"]}
      >
        <meshStandardMaterial
          transparent
          opacity={0.15}
          depthTest={false}
          depthWrite={false}
        />
      </mesh>
      <mesh
        geometry={nodes.Cube020.geometry}
        material={materials["ship-base"]}
        renderOrder={renderOrders.findIndex(
          (materialName) => materialName === "ship-base"
        )}
      />
      <mesh
        geometry={nodes.Cube020_1.geometry}
        material={materials["ship-gray"]}
        renderOrder={renderOrders.findIndex(
          (materialName) => materialName === "ship-gray"
        )}
      />
      <mesh
        geometry={nodes.Cube020_2.geometry}
        material={materials["ship-orange"]}
        renderOrder={renderOrders.findIndex(
          (materialName) => materialName === "ship-orange"
        )}
      />
      <mesh
        geometry={nodes.Cube020_3.geometry}
        material={materials["console-base"]}
        renderOrder={renderOrders.findIndex(
          (materialName) => materialName === "console-base"
        )}
      />
      <mesh
        geometry={nodes.Cube020_4.geometry}
        material={materials["console-black"]}
        renderOrder={renderOrders.findIndex(
          (materialName) => materialName === "console-black"
        )}
      />
      <mesh
        geometry={nodes.Cube020_5.geometry}
        material={materials["console-gray"]}
        renderOrder={renderOrders.findIndex(
          (materialName) => materialName === "console-gray"
        )}
      />
      <mesh
        geometry={nodes.Cube020_6.geometry}
        material={materials["console-base-back"]}
        renderOrder={renderOrders.findIndex(
          (materialName) => materialName === "console-base-back"
        )}
      />
      <mesh
        geometry={nodes.Cube020_7.geometry}
        material={materials["console-gray-back"]}
        renderOrder={renderOrders.findIndex(
          (materialName) => materialName === "console-gray-back"
        )}
      />
    </group>
  );
}

useGLTF.preload("/spaceship-model.glb");
