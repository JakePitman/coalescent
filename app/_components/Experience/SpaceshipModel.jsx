/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/spaceship-model-glass.glb 
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useTexture, Center } from "@react-three/drei";
import { ColorShiftMaterial } from "./Light";
import { useThree } from "@react-three/fiber";
import { MeshPhysicalMaterial } from "three";
import { useControls } from "leva";

// const glassMaterial = new MeshPhysicalMaterial({
//   metalness: 0,
//   depthTest: false,
//   depthWrite: false,
//   transmission: 1,
//   thickness: 0,
//   roughness: 0,
//   envMapIntensity: 0.3,
// });

export function Model(props) {
  const { rotation } = useControls({
    rotation: [0, 0, 0],
  });
  // const { clock } = useThree();
  const texture = useTexture("/baked/baked-ship-8192.jpg");
  texture.flipY = false;
  const { nodes } = useGLTF("/baked/ship.glb");

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.merged.geometry} rotation={rotation}>
        <meshBasicMaterial map={texture} />
      </mesh>

      {/* 
      // Reference for adding glass and light rings to the spaceship model
      <mesh
        geometry={nodes.Cube029_11.geometry}
        material={glassMaterial}
        renderOrder={renderOrders.findIndex((el) => el === "glass")}
      />
      <mesh
        geometry={nodes.Cube029_10.geometry}
        material={materials["lightring-one"]}
        renderOrder={renderOrders.findIndex((el) => el === "lightring-one")}
      >
        <colorShiftMaterial
          emissive={[1, 1, 1]}
          emissiveIntensity={30}
          color="green"
          time={clock.elapsedTime}
          speed={1.0}
          depthWrite={false}
          depthTest={false}
        />
      </mesh> */}
    </group>
  );
}

useGLTF.preload("/baked/ship.glb");
