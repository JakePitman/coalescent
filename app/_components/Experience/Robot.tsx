/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/robot.glb -o app/Robot.jsx 
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useAnimationContext } from "@contexts/AnimationContext";
import HolographicMaterial from "./HolographicMaterial";
import { MeshStandardMaterial, Vector3, Group, Material } from "three";

const holographicMaterial = new HolographicMaterial() as Material;
const eyesMaterial = new MeshStandardMaterial({ color: "white" });

type Props = {
  scale?: number | [x: number, y: number, z: number];
  position?: [x: number, y: number, z: number];
  rotation?: [x: number, y: number, z: number];
};

// control scale and position of the robot
export const Robot = ({
  scale = 1,
  position = [0, 0, 0],
  rotation = [0, 0, 0],
}: Props) => {
  const group = useRef<Group>(null);
  // @ts-ignore
  const { nodes, materials, animations } = useGLTF("/robot.glb");
  const { actions, names } = useAnimations(animations, group);
  const { animationName } = useAnimationContext();

  useEffect(() => {
    actions[animationName]?.reset().fadeIn(0.5).play();
    return () => {
      actions[animationName]?.fadeOut(0.5);
    };
  }, [actions, names, animationName]);

  return (
    <group
      ref={group}
      dispose={null}
      scale={scale}
      position={position}
      rotation={rotation}
    >
      <group name="Scene">
        <group name="Armature">
          <primitive object={nodes.DEF_Torso001} />
          <primitive object={nodes.DEF_topLeftScreen001} />
          <primitive object={nodes.DEF_bottomLeftScreen001} />
          <primitive object={nodes.DEF_rightScreen001} />
          <skinnedMesh
            name="Eyes"
            geometry={nodes.Eyes.geometry}
            material={eyesMaterial}
            skeleton={nodes.Eyes.skeleton}
          />
          <skinnedMesh
            name="Screens"
            geometry={nodes.Screens.geometry}
            material={holographicMaterial}
            skeleton={nodes.Screens.skeleton}
          />
          <skinnedMesh
            name="Torso"
            geometry={nodes.Torso.geometry}
            material={holographicMaterial}
            skeleton={nodes.Torso.skeleton}
          />
        </group>
        <mesh
          name="Keyboard"
          geometry={nodes.Keyboard.geometry}
          material={holographicMaterial}
          position={[-0.353, 1.868, 0.247]}
          rotation={[0, -0.96, 0]}
        />
      </group>
    </group>
  );
};

useGLTF.preload("/robot.glb");
